(()=>{async function O(c,i={}){if(!c)throw new Error("Invalid image binary data");let{width:n=4e3,height:r=4e3,scaledWidth:a=4e3,scaledHeight:g=4e3,imgOffsetX:f=0,imgOffsetY:d=0}=i,l=await createImageBitmap(await fetch(c).then(e=>e.blob()));URL.revokeObjectURL(c);let s=document.createElement("canvas");return s.width=n,s.height=r,s.getContext("2d",{willReadFrequently:!0}).drawImage(l,f,d,a,g),s}function E(c){let{data:i,width:n,height:r}=c,a=new Uint8ClampedArray(n*r);for(let g=0;g<i.length;g+=4){let f=.299*i[g]+.587*i[g+1]+.114*i[g+2];a[g/4]=f}return{data:a,width:n,height:r}}function R(c,i){let{data:n,width:r,height:a}=c,g=Math.max(3,Math.ceil(i*3)*2+1),f=Math.floor(g/2),d=new Float32Array(g),l=0;for(let e=0;e<g;e++){let t=e-f;d[e]=Math.exp(-(t*t)/(2*i*i)),l+=d[e]}for(let e=0;e<g;e++)d[e]/=l;let s=new Uint8ClampedArray(r*a);for(let e=0;e<a;e++)for(let t=0;t<r;t++){let h=0;for(let o=-f;o<=f;o++){let p=Math.min(Math.max(t+o,0),r-1);h+=n[e*r+p]*d[o+f]}s[e*r+t]=h}let m=new Uint8ClampedArray(r*a);for(let e=0;e<a;e++)for(let t=0;t<r;t++){let h=0;for(let o=-f;o<=f;o++){let p=Math.min(Math.max(e+o,0),a-1);h+=s[p*r+t]*d[o+f]}m[e*r+t]=h}return{data:m,width:r,height:a}}async function A(c,i=3){let n=c.getContext("2d",{willReadFrequently:!0}),r=n.getImageData(0,0,c.width,c.height),{data:a,width:g,height:f}=r;i%2===0&&i++;let d=Math.floor(i/2),l=new Uint8ClampedArray(a.length);for(let s=0;s<f;s++)for(let m=0;m<g;m++){let e=[];for(let o=-d;o<=d;o++)for(let p=-d;p<=d;p++){let y=Math.min(Math.max(m+p,0),g-1),u=(Math.min(Math.max(s+o,0),f-1)*g+y)*4;e.push({r:a[u],g:a[u+1],b:a[u+2],a:a[u+3],luminance:.299*a[u]+.587*a[u+1]+.114*a[u+2],sourceIdx:u})}e.sort((o,p)=>o.luminance-p.luminance);let t=e[Math.floor(e.length/2)],h=(s*g+m)*4;l[h]=t.r,l[h+1]=t.g,l[h+2]=t.b,l[h+3]=t.a}n.clearRect(0,0,g,f),n.putImageData(new ImageData(l,g,f),0,0)}async function F(c,i=3){let n=c.getContext("2d",{willReadFrequently:!0}),r=n.getImageData(0,0,c.width,c.height),{data:a,width:g,height:f}=r;i%2===0&&i++;let d=Math.floor(i/2),l=new Uint8ClampedArray(a.length);for(let s=0;s<f;s++)for(let m=0;m<g;m++){let e=!1;for(let h=-d;h<=d;h++){for(let o=-d;o<=d;o++){let p=Math.min(Math.max(m+o,0),g-1),w=(Math.min(Math.max(s+h,0),f-1)*g+p)*4;if(.299*a[w]+.587*a[w+1]+.114*a[w+2]>0){e=!0;break}}if(e)break}let t=(s*g+m)*4;e?(l[t]=255,l[t+1]=255,l[t+2]=255,l[t+3]=255):(l[t]=0,l[t+1]=0,l[t+2]=0,l[t+3]=0)}n.clearRect(0,0,g,f),n.putImageData(new ImageData(l,g,f),0,0)}function k(c,i){let{width:n,height:r}=c,a=document.createElement("canvas");return a.width=n,a.height=r,a.getContext("2d",{willReadFrequently:!0}).putImageData(i,0,0),a}async function N(c,i,n){let r=c.getContext("2d",{willReadFrequently:!0}),a=k(c,i),g=r.globalCompositeOperation;r.globalCompositeOperation=n,r.drawImage(a,0,0),r.globalCompositeOperation=g}async function W(c,i={}){let{threshold:n=25,thinning:r=!0}=i,a=c.getContext("2d",{willReadFrequently:!0}),{width:g,height:f}=c;console.log(`Running Kovalevsky edge detection: ${g}x${f}, threshold: ${n}`);let d=a.getImageData(0,0,g,f),l=E(d);console.log("Grayscale conversion complete");let s=R(l,1);console.log("Gaussian blur complete");let m=K(s);console.log("Gradient calculation complete");let e=Z(m,n,r);console.log("Edge extraction complete");let t=a.createImageData(g,f),h=t.data;for(let o=0;o<e.length;o++){let p=o*4,y=e[o]?255:0;h[p]=y,h[p+1]=y,h[p+2]=y,h[p+3]=255}return a.putImageData(t,0,0),c}function K(c){let{data:i,width:n,height:r}=c,a=new Uint8ClampedArray(n*r),g=[[1,0],[0,-1]],f=[[0,1],[-1,0]];for(let t=0;t<r-1;t++)for(let h=0;h<n-1;h++){let o=0,p=0;for(let w=0;w<2;w++)for(let u=0;u<2;u++){let M=(t+w)*n+(h+u);o+=i[M]*g[w][u],p+=i[M]*f[w][u]}let y=Math.sqrt(o*o+p*p);a[t*n+h]=Math.min(255,y)}for(let t=0;t<r-1;t++){let h=n-1,o=i[t*n+(h-1)],p=i[t*n+h],y=i[(t+1)*n+h];a[t*n+h]=Math.min(255,Math.abs(p-o)+Math.abs(p-y))}for(let t=0;t<n-1;t++){let h=r-1,o=i[(h-1)*n+t],p=i[h*n+t],y=i[h*n+(t+1)];a[h*n+t]=Math.min(255,Math.abs(p-o)+Math.abs(p-y))}let d=r-1,l=n-1,s=i[d*n+(l-1)],m=i[(d-1)*n+l],e=i[d*n+l];return a[d*n+l]=Math.min(255,Math.abs(e-s)+Math.abs(e-m)),{data:a,width:n,height:r}}function Z(c,i,n){let{data:r,width:a,height:g}=c,f=new Uint8ClampedArray(a*g);for(let t=0;t<r.length;t++)r[t]>=i&&(f[t]=1);if(n){let t=J(f,a,g);for(let h=0;h<f.length;h++)f[h]=t[h]}let d=new Uint8ClampedArray(a*g),l=new Uint8ClampedArray(a*g),s=[-1,-1,0,1,1,1,0,-1],m=[0,-1,-1,-1,0,1,1,1];for(let t=0;t<g;t++)for(let h=0;h<a;h++){let o=t*a+h;if(f[o]===1){let p=0;for(let y=0;y<8;y++){let w=h+s[y],u=t+m[y];if(w>=0&&w<a&&u>=0&&u<g){let M=u*a+w;f[M]===1&&p++}}p>=2&&(d[o]=1,l[o]=1)}}function e(t,h){let o=[{x:t,y:h}];for(;o.length>0;){let{x:p,y}=o.pop();for(let w=0;w<8;w++){let u=p+s[w],M=y+m[w];if(u>=0&&u<a&&M>=0&&M<g){let x=M*a+u;!l[x]&&f[x]===1&&(d[x]=1,l[x]=1,o.push({x:u,y:M}))}}}}for(let t=0;t<g;t++)for(let h=0;h<a;h++){let o=t*a+h;d[o]===1&&l[o]===1&&e(h,t)}for(let t=0;t<f.length;t++)if(f[t]===1&&!l[t]){let h=Math.floor(t/a),o=t%a,p=!1;for(let y=0;y<8;y++){let w=o+s[y],u=h+m[y];if(w>=0&&w<a&&u>=0&&u<g){let M=u*a+w;if(d[M]===1){p=!0;break}}}p&&(d[t]=1)}return d}function J(c,i,n){let r=new Uint8ClampedArray(c),a=new Uint8ClampedArray(i*n),g=!0,f=10,d=0;function l(s,m){let e=s%i,t=Math.floor(s/i);if(e===0||t===0||e===i-1||t===n-1||r[s]!==1)return!1;let o=r[(t-1)*i+e],p=r[(t-1)*i+(e+1)],y=r[t*i+(e+1)],w=r[(t+1)*i+(e+1)],u=r[(t+1)*i+e],M=r[(t+1)*i+(e-1)],x=r[t*i+(e-1)],I=r[(t-1)*i+(e-1)],b=[o,p,y,w,u,M,x,I],D=0;for(let S=0;S<7;S++)b[S]===0&&b[S+1]===1&&D++;b[7]===0&&b[0]===1&&D++;let C=b.filter(S=>S===1).length;return m===0?D===1&&C>=2&&C<=6&&o*y*u===0&&y*u*x===0:D===1&&C>=2&&C<=6&&o*y*x===0&&o*u*x===0}for(;g&&d<f;){g=!1,d++;for(let s=0;s<r.length;s++)l(s,0)&&(a[s]=1,g=!0);for(let s=0;s<r.length;s++)a[s]===1&&(r[s]=0,a[s]=0);for(let s=0;s<r.length;s++)l(s,1)&&(a[s]=1,g=!0);for(let s=0;s<r.length;s++)a[s]===1&&(r[s]=0,a[s]=0)}return r}function z(c,i={}){let{k:n=5,maxIterations:r=50,threshold:a=1}=i,g=c.getContext("2d",{willReadFrequently:!0}),f=g.getImageData(0,0,c.width,c.height),{data:d,width:l,height:s}=f,m=[];for(let u=0;u<d.length;u+=4)m.push([d[u],d[u+1],d[u+2]]);let e=[],t=new Set;for(let u=0;u<n;u++){let M;do M=Math.floor(Math.random()*m.length);while(t.has(M));t.add(M),e.push([...m[M]])}let h=new Array(m.length).fill(0),o=0,p=!1;for(;!p&&o<r;){for(let x=0;x<m.length;x++){let I=1/0,b=0;for(let D=0;D<n;D++){let C=q(m[x],e[D]);C<I&&(I=C,b=D)}h[x]=b}let u=Array(n).fill().map(()=>[0,0,0]),M=Array(n).fill(0);for(let x=0;x<m.length;x++){let I=h[x],b=m[x];u[I][0]+=b[0],u[I][1]+=b[1],u[I][2]+=b[2],M[I]++}for(let x=0;x<n;x++)M[x]>0&&(u[x][0]/=M[x],u[x][1]/=M[x],u[x][2]/=M[x]);p=!0;for(let x=0;x<n;x++)if(q(e[x],u[x])>a){p=!1;break}e.splice(0,n,...u),o++}let y=new Uint8ClampedArray(d.length);for(let u=0;u<m.length;u++){let M=h[u],[x,I,b]=e[M].map(Math.round),D=u*4;y[D]=x,y[D+1]=I,y[D+2]=b,y[D+3]=d[D+3]}let w=new ImageData(y,l,s);g.clearRect(0,0,l,s),g.putImageData(w,0,0)}function q(c,i){return Math.sqrt(c.reduce((n,r,a)=>n+Math.pow(r-i[a],2),0))}function L(c,i={}){let{cellSize:n=8,preserveCanvas:r=!1}=i;if(!c||!(c instanceof HTMLCanvasElement))throw new Error("Invalid canvas element");if(n<1)throw new Error("Cell size must be at least 1 pixel");let a=c.width,g=c.height,f=r?document.createElement("canvas"):c;r&&(f.width=a,f.height=g);let d=c.getContext("2d",{willReadFrequently:!0}),l=f.getContext("2d",{willReadFrequently:!0}),s=d.getImageData(0,0,a,g),{data:m}=s,e=Math.ceil(a/n),t=Math.ceil(g/n);console.log(`Pixelizing image: ${a}x${g} to ${e}x${t} cells (cell size: ${n}px)`);for(let h=0;h<t;h++)for(let o=0;o<e;o++){let p=o*n,y=h*n,w=Math.min(p+n,a),u=Math.min(y+n,g),M={};for(let b=y;b<u;b++)for(let D=p;D<w;D++){let C=(b*a+D)*4,S=`rgba(${m[C]}, ${m[C+1]}, ${m[C+2]}, 1)`;M[S]??=0,M[S]++}let x=0,I=null;for(let b in M)M[b]>x&&(x=M[b],I=b);l.fillStyle=I,l.fillRect(p,y,w-p,u-y)}return f}function U(c,i,n={}){let{threshold:r=100}=n,g=c.getContext("2d",{willReadFrequently:!0}).getImageData(0,0,c.width,c.height),{data:f}=g,d=[];for(let l=0;l<c.height;l+=i)for(let s=0;s<c.width;s+=i){let m=0,e=0,t=0,h=0;for(let o=0;o<i;o++){let p=(l*c.width+s+o)*4,y=((l-1)*c.width+s+o)*4,w=((l+o)*c.width+s)*4,u=((l+o)*c.width+(s-1))*4;f[p]>=r||y>=0&&y<f.length&&f[y]>=r?(t++,m=Math.max(m,t)):t=0,f[w]>=r||u>=0&&u<f.length&&f[u]>=r?(h++,e=Math.max(e,h)):h=0}m>i/2&&d.push([s,l,s+i,l]),e>i/2&&d.push([s,l,s,l+i])}return d}function G(c,i){let n=c.getContext("2d",{willReadFrequently:!0});n.strokeStyle="white",n.lineWidth=2;for(let r of i){let[a,g,f,d]=r;n.beginPath(),n.moveTo(a,g),n.lineTo(f,d),n.stroke()}}async function Y(c,i){let{threshold:n=.4}=i,r=c.getContext("2d"),a=c.width,g=c.height,f=r.getImageData(0,0,a,g),d=f.data,l=new Map,s=2*a+2*g-4;for(let e=0;e<a;e++){let t=(e+0*a)*4,h=`${d[t]},${d[t+1]},${d[t+2]}`;l.set(h,(l.get(h)||0)+1);let o=(e+(g-1)*a)*4,p=`${d[o]},${d[o+1]},${d[o+2]}`;l.set(p,(l.get(p)||0)+1)}for(let e=1;e<g-1;e++){let t=(0+e*a)*4,h=`${d[t]},${d[t+1]},${d[t+2]}`;l.set(h,(l.get(h)||0)+1);let o=(a-1+e*a)*4,p=`${d[o]},${d[o+1]},${d[o+2]}`;l.set(p,(l.get(p)||0)+1)}let m=new Set;for(let[e,t]of l.entries())t/s>n&&m.add(e);for(let e=0;e<d.length;e+=4){let t=`${d[e]},${d[e+1]},${d[e+2]}`;m.has(t)?(d[e]=0,d[e+1]=0,d[e+2]=0,d[e+3]=255):(d[e]=255,d[e+1]=255,d[e+2]=255,d[e+3]=255)}return r.putImageData(f,0,0),c}async function H(c,i={}){let{width:n,height:r,cellSize:a,imgWidth:g,imgHeight:f,resolutionScale:d}=(()=>{let x=c.grid.size||c.grid.gridX||100,I=c.width,b=c.height,D=Math.max(i.subCellScale||1,1),C=Math.round(Math.max(i.resolutionScale??x/(D*7),1));for(;C>1&&x/(C*D)%1>1/Math.max(I*D/x,b*D/x);)C-=1,console.log("Adjusted resolutionScale to",C);let S=Math.floor(x/(C*D)),v=Math.floor(I/C),P=Math.floor(b/C),B=Math.floor(v/S)*S,j=Math.floor(P/S)*S;return{width:B,height:j,cellSize:S,imgWidth:v,imgHeight:P,resolutionScale:C}})(),{canvas:l=null,internalWalls:s=!1,k:m=5,nowalls:e=!1,edgeDetection:t=!0,pixelize:h=!0}=i,o=await O(c.background.src,{width:n,height:r,scaledWidth:g,scaledHeight:f}),p=o.getContext("2d",{willReadFrequently:!0}),y=p.getImageData(0,0,n,r);if(z(o,{k:m}),h&&(Y(o,{threshold:.4}),await A(o,5),L(o,{cellSize:a})),t&&(await W(o,{thinning:!1}),await A(o,3)),s){let x=k({width:n,height:r},y);await W(x,{thinning:!0}),N(o,x.getContext("2d",{willReadFrequently:!0}).getImageData(0,0,n,r),"lighten"),F(o,3)}let w=U(o,a,{threshold:50});if(e||(p.fillRect(0,0,n,r,"black"),p.putImageData(y,0,0),G(o,w)),l){let x=l.getContext("2d");l.height=Math.round(l.width*(r/n)),x.drawImage(o,0,0,l.width,l.height)}let u=c.dimensions.sceneX,M=c.dimensions.sceneY;return w.map(x=>x.map((I,b)=>I*d+(b%2==0?u:M)))}async function _(c){let i=c.walls.filter(l=>l.door==CONST.WALL_DOOR_TYPES.NONE&&l.dir==CONST.WALL_DIRECTIONS.BOTH&&l.light==CONST.WALL_SENSE_TYPES.NORMAL&&l.sight==CONST.WALL_SENSE_TYPES.NORMAL&&l.sound==CONST.WALL_SENSE_TYPES.NORMAL&&l.move==CONST.WALL_MOVEMENT_TYPES.NORMAL&&!l.threshold.attenuation&&l.threshold.light==null&&l.threshold.sight==null&&l.threshold.sound==null),n={},r={};i.forEach(l=>{let s=l.c,m=Math.round(Math.atan2(Math.abs(s[3]-s[1]),Math.abs(s[2]-s[0]))*30),e=`${Math.round(s[0])},${Math.round(s[1])},${m}`,t=`${Math.round(s[2])},${Math.round(s[3])},${m}`;n[e]??=new Set,n[t]??=new Set,n[e].add(l),n[t].add(l),r[l.id]=[e,t]});let a=[],g=new Set,f=function(l,s){s.add(l);let[m,e]=r[l.id];g.has(m)||(g.add(m),n[m].forEach(t=>f(t,s))),g.has(e)||(g.add(e),n[e].forEach(t=>f(t,s)))};for(let[l,s]of Object.entries(n)){if(g.has(l))continue;let m=new Set;for(let e of s)f(e,m);a.push(m)}let d=[];for(let l of a){let s=[...l].map(o=>o.c),m=Math.min(...s.map(o=>Math.min(o[0],o[2]))),e=Math.min(...s.map(o=>Math.min(o[1],o[3]))),t=Math.max(...s.map(o=>Math.max(o[0],o[2]))),h=Math.max(...s.map(o=>Math.max(o[1],o[3])));d.push([m,e,t,h])}await c.deleteEmbeddedDocuments("Wall",i.map(l=>l.id)),await c.createEmbeddedDocuments("Wall",d.map(l=>({c:l,flags:{"auto-detect-walls":{auto:!0}}})))}async function T(c){let i=document.createElement("canvas");i.height=600,i.width=360;let n=Dialog.prompt({content:"<div class='bkgcanvas'></div>",render:f=>{$(f).find(".bkgcanvas").append(i)},rejectOnClose:!0}),r=H(c,{canvas:i,internalWalls:!1,nowalls:!1,edgeDetection:!0,pixelize:!0});await n;let a=await r;if(!a)return;let g=c.walls.filter(f=>f.flags["auto-detect-walls"]?.auto);g.length>0&&await c.deleteEmbeddedDocuments("Wall",g.map(f=>f.id)),await c.createEmbeddedDocuments("Wall",a.map(f=>({c:f,flags:{"auto-detect-walls":{auto:!0}}})))}function V(){window.sceneToWalls=H,window.SceneToWallsDialog=T}function et(c){let i=c.find(n=>n.name==="walls");i.tools.push({icon:"fa-solid fa-hat-wizard",name:"auto-detect-walls",title:"Auto Detect Walls",button:!0,onClick:()=>T(canvas.scene)}),i.tools.push({icon:"fa-solid fa-gauge-max",name:"minimize-walls",title:"Minimize Walls",button:!0,onClick:()=>_(canvas.scene)})}function X(){Hooks.on("getSceneControlButtons",et)}function nt(){let c=game.data.users.find(n=>n._id==game.data.userId).role,i=CONST.USER_ROLES.ASSISTANT;return c>=i}Hooks.on("init",()=>{nt()&&(X(),V())});})();
